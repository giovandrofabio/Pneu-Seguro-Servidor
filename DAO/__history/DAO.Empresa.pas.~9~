unit DAO.Empresa;

interface

uses FireDAC.Comp.Client,
     FireDAC.DApt,
     Data.DB,
     System.JSON,
     System.SysUtils,
     System.StrUtils,
     DataSet.Serialize,
     DAO.Connection;

type
   TEmpresa = class
   private
      FConn: TFDConnection;
      FID_EMPRESA: integer;
      FNOME_EMPRESA: string;
      procedure Validate(operacao: string);
   public
      constructor Create;
      destructor Destroy; override;

      property ID_EMPRESA: integer Read FID_EMPRESA write FID_EMPRESA;
      property NOME_EMPRESA: string read FNOME_EMPRESA write FNOME_EMPRESA;

      function Listar(busca: string) : TJSONArray;
      procedure Adicionar;
   end;


implementation


{ TEmpresa }

procedure TEmpresa.Adicionar;
var
   qry: TFDQuery;
   json: TJSONObject;
begin
   Validate('Adicionar');

   try
      qry            := TFDQuery.Create(nil);
      qry.Connection := FConn;

      with qry do
      begin
         Active := False;
         SQL.Clear;
         SQL.Add('INSERT INTO TAB_EMPRESA(NOME_EMPRESA)');
         SQL.Add('VALUES(:NOME_EMPRESA);');
         SQL.Add('SELECT last_insert_rowid() AS ID_EMPRESA;');

         ParamByName('NOME_EMPRESA').Value     := NOME_EMPRESA;

         Active := True;

         ID_EMPRESA := FieldByName('ID_EMPRESA').AsInteger;
      end;

   finally
      qry.DisposeOf
   end;
end;

constructor TEmpresa.Create;
begin
   FConn := TConnection.CreateConnection;
end;

destructor TEmpresa.Destroy;
begin
  if Assigned(FConn) then
     FConn.Free;

  inherited;
end;

function TEmpresa.Listar(busca: string): TJSONArray;
begin
//
end;

procedure TEmpresa.Validate(operacao: string);
begin
//
end;

end.
